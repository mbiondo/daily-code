<button id='theme-switch' class='btn btn-circle btn-ghost'>
	<svg xmlns='http://www.w3.org/2000/svg' class='h-5 w-5 fill-current' viewBox='0 0 20 20'>
		<path
			fill-rule='evenodd'
			d='M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z'
			clip-rule='evenodd'></path>
	</svg>
</button>

<script>
	const initTheme = () => {
		const themeSwitch = document.getElementById("theme-switch")
		const html = document.documentElement

		function setTheme(theme: string) {
			html.setAttribute("data-theme", theme)
			localStorage.setItem("theme", theme)
		}

		themeSwitch?.addEventListener("click", () => {
			const currentTheme = html.getAttribute("data-theme")
			const newTheme = currentTheme === "light" ? "dark" : "light"
			setTheme(newTheme)
		})

		// Set initial theme
		const savedTheme = localStorage.getItem("theme") || "light"
		setTheme(savedTheme)

		// Update theme when it changes
		const observer = new MutationObserver((mutations) => {
			mutations.forEach((mutation) => {
				if (mutation.type === "attributes" && mutation.attributeName === "data-theme") {
					const newTheme = html.getAttribute("data-theme")
					localStorage.setItem("theme", newTheme || "light")
				}
			})
		})

		observer.observe(html, { attributes: true })
	}

	document.addEventListener("astro:page-load", () => {
		// This runs on first page load and after every navigation.
		initTheme()
	})
	document.addEventListener("astro:after-swap", () => {
		// This runs on first page load only.
		initTheme()
	})
</script>
